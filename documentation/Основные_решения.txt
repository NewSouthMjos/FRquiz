==========================================================
--Основная функция приложения:
Предоставить API-доступ для сервиса опросов.
Функционал для пользователей системы:
- получение списка активных опросов
- прохождение опроса: опросы можно проходить анонимно, 
в качестве идентификатора пользователя в API передаётся 
числовой ID, по которому сохраняются ответы пользователя 
на вопросы; один пользователь может участвовать в любом 
количестве опросов
- получение пройденных пользователем опросов с детализацией
по ответам (что выбрано) по ID уникальному пользователя.

--Использованный стек:
-Python 3
-Django 2.2.10
-Django REST framework.

--Точки доступа API:
см. файл input_points.txt

--Структура базы данных:
см. файл Структура_БД.PNG

==========================================================

Некоторые пояснения по базе данных:

1. Время start_date и end_date для объетов Quiz хранится
в виде Epoch Unix Timestamp в виде целочисленного
значения. Это сделано для ухода от проблем с часовыми
поясами, однако на стороне клиента должно быть
осуществлено преобразование времени к epoch-формату.

2. Объект Question имеет поле type, которое должно
принимать одно из трёх значений:
-"text"
-"choise"
-"multichoise"
При типе "choise" и "multichoise" так же должно быть 
заполнено поле answers_choise в следующем виде:
"Первый вариант///Второй вариант///Третий вариант" и
так далее. Разделитель между вариантами - "///"

3. Объект Answer в поле value хранит ответ. Если тип
вопроса был "text", то и в может помещаться свободный
текст. Если тип вопроса был "choise" или "multichoise",
то в поле может помещаться ответ в виде числа/чисел,
например "0///3///11". Разделитель - "///"
ВНИМАНИЕ: приложение не проверяет соответсвие типа 
вопроса к типу ответа!

==========================================================
